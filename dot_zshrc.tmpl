# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

# set default user for theme prompt context
# agnoster will hide user@machine when $USER==$DEFAULT_USER or on SSH 
export DEFAULT_USER="dan"
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=~/.oh-my-zsh/custom

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#

# plugins!
if [ ! -d $ZSH_CUSTOM/plugins/zsh-autosuggestions ] ; then
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
fi 

if [ ! -d $ZSH_CUSTOM/plugins/zsh-completions ] ; then
    git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-completions
fi 

if [ ! -d $ZSH_CUSTOM/plugins/zsh-syntax-highlighting ] ; then
    git clone https://github.com/zsh-users/zsh-syntax-highlighting ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
fi 

if [ ! -d ~/.fzf ]; then 
    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
    ~/.fzf/install
fi

plugins=(colorize django pip python safe-paste zsh-completions zsh-autosuggestions zsh-syntax-highlighting vi-mode fzf)

source $ZSH/oh-my-zsh.sh

# USER CONFIGURATION

# Binds
bindkey '^ ' autosuggest-accept

# Plugin & Terminal app config
RANGER_LOAD_DEFAULT_RC=FALSE
VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
VI_MODE_SET_CURSOR=true
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=5"

# HELPER FUNCTIONS

# remove ".<ext>" from filename (not path)
filename_noext() {
    echo "$1" | cut -f 1 -d '.'
}

# generate sequence of numbers all zero padded
padded_range() {
    seq -f "%0$3g" $1 $2 
}

# Time zsh load 
#https://blog.mattclemente.com/2020/06/26/oh-my-zsh-slow-to-load.html#how-to-test-your-shell-load-time

timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

timezshplugins() {
    for plugin ($plugins); do
        timer=$(python -c 'from time import time; print int(round(time() * 1000))')
        if [ -f $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh ]; then
            source $ZSH_CUSTOM/plugins/$plugin/$plugin.plugin.zsh
        elif [ -f $ZSH/plugins/$plugin/$plugin.plugin.zsh ]; then
            source $ZSH/plugins/$plugin/$plugin.plugin.zsh
        fi
        now=$(python -c 'from time import time; print int(round(time() * 1000))')
        elapsed=$(($now-$timer))
        echo $elapsed":" $plugin
    done
}

# Pi Cluster Helpers
{{- if eq .chezmoi.group "pi"}}
export JAVA_HOME=$(readlink --canonicalize /usr/bin/java | sed "s:bin/java::")
export HADOOP_HOME=/opt/hadoop
export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
export SPARK_HOME=/opt/spark
export PATH=$PATH:$SPARK_HOME/bin

function otherpis {
  grep "pi" /etc/hosts | awk '{print $2}' | grep -v $(hostname)
}

function clustercmd {
  for pi in $(otherpis); do ssh $pi "$@"; done
  eval $@
}

function clusterreboot {
  clustercmd sudo shutdown -r now
}

function clustershutdown {
  clustercmd sudo shutdown now
}

function clusterscp {
  for pi in $(otherpis); do
    cat $1 | ssh $pi "sudo tee $1" > /dev/null 2>&1
  done
}
{{- end }}

# export MANPATH="/usr/local/man:$MANPATH"
export XDG_USER_CONFIG_DIR=~/.config
export BROWSER='google-chrome-stable'

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
else
   export EDITOR='vim'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

if [ -f ~/.aliases ]; then
	. ~/.aliases
fi

# COMPLETIONS

# cheat.sh completions
if [ ! -f ~/.zsh.d/_cht ]; then
    [ -d ~/.zsh.d ] || mkdir ~/.zsh.d
    curl https://cheat.sh/:zsh > ~/.zsh.d/_cht
fi 

if [[ -d ~/.zsh.d ]]; then
    fpath=(~/.zsh.d/ $fpath)
fi

# COLORS

# wal colorscheme
if [[ -d ~/.cache/wal ]]
then
#    (cat ~/.cache/wal/sequences &)
    source ~/.cache/wal/colors.sh
fi

# CONDA 
if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
    . "$HOME/miniconda3/etc/profile.d/conda.sh"
#else
#    export PATH="$HOME/miniconda3/bin:$PATH"
fi

# Install a local jupyter kernel $1 named $2
jupyter_add_external_kernel() {

    if command -v mamba &> /dev/null
    then
        conda activate "$1"
        mamba install -y ipykernel
    elif command -v conda &> /dev/null
    then
        conda activate "$1"
        conda install -y ipykernel
    else
        echo "Neither mamba or conda found"
        return 1
    fi

    ipython kernel install --user --name="$2"
    conda deactivate
}

# remove user@hostname when logged in as self on local machine
# prompt_context(){}
